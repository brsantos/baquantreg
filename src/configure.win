#!/bin/sh

# Don't use setInternet2() if R version > 3.2.1
R_SCRIPT="${R_HOME}/bin${R_ARCH_BIN}/Rscript"
SET_INTERNET2=`"${R_SCRIPT}" -e "cat(ifelse(compareVersion(sprintf('%s.%s', R.version['major'], R.version['minor']), '3.2.2') > 0, '', 'setInternet2();'))"`

# Use libcurl if available
USE_LIBCURL=`"${R_SCRIPT}" -e "cat(ifelse(capabilities('libcurl'), 'method=\'libcurl\',', ''))"`

# Check for gsl headers and libraries
have_gsl=yes
local=`"${R_HOME}/bin/R" CMD config LOCAL_SOFT`
LOCAL_URL=https://www.stats.ox.ac.uk/pub/Rtools/goodies/multilib/local323.zip
if [ ! -e "${local}/include/gsl/gsl_rng.h" ]; then
    if [ ! -e src/gsl/include/gsl/gsl_rng.h ]; then
        if [ ! -e local.zip ]; then
            echo "  cannot find gsl files"
            echo "  attempting to download them"
            "${R_SCRIPT}" -e "${SET_INTERNET2} download.file('${LOCAL_URL}', 'local.zip', ${USE_LIBCURL} quiet = TRUE)"
        fi
        if [ ! -e local.zip ]; then
	    have_gsl=no
        else
	    echo "  unpacking gsl files from local.zip"
            unzip -u local.zip include/gsl* lib/i386/libgsl.a lib/x64/libgsl.a lib/i386/libgslcblas.a lib/x64/libgslcblas.a -d src/gsl
            if [ ! -e src/gsl/include/gsl/gsl_rng.h ]; then
	        have_gsl=no
	    fi
        fi
    fi
fi

if [ ${have_gsl} != yes ]; then
    echo ""
    echo " *** ERROR: unable to find the gsl files"
    echo ""
    echo " They must be either in 'src/gsl' or in 'local.zip'"
    echo ""
    echo " You can download external software from (save as 'local.zip')"
    echo " ${LOCAL_URL}"
    echo ""
    echo " Another option is to configure the LOCAL_SOFT variable, see:"
    echo "   https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Windows-packages"
    echo "   http://www.stats.ox.ac.uk/pub/Rtools/libs.html"
    echo ""
    exit 1
fi

echo "  The configuration seems ok, continuing the build process."

exit 0